C++ Operators
An operator is simply a symbol that is used to perform operations. 

A unary operator is an operator used to operate on a single operand to return a new value. 

A binary operator is an operator that operates on two operands and manipulates them to return a result.

The conditional (ternary) operator is the only JavaScript operator that takes three operands: a condition followed by a question mark ( ? ), then an expression to execute if the condition is truthy followed by a colon ( : ), and finally the expression to execute if the condition is falsy.
condition ? expression1(true) : expression2(false);

Arithmetic Operators (+, -, *, /, %)
Relational Operators (<, <=, >, >=, ==, !=)
Logical Operators (&&, ||, !)
Bitwise Operators (&, |, <<, >>, ~, ^)
Assignment Operator (=, +=, -=, *=, /=, %=)
Unary operator (++, --)
Ternary or Conditional Operator (?:)
Misc Operator (sizeof, ?, , ,.,&,*,cast)

The precedence and associativity of C++ operators is given below:

Category		Operator				Associativity
Postfix		() [] -> . ++ - -			Left to right
Unary		+ - ! ~ ++ - - (type)* & sizeof		Right to left
Multiplicative	* / %				Left to right
Additive		+ -				Right to left
Shift		<< >>				Left to right
Relational		< <= > >=			Left to right
Equality		== !=/td>			Right to left
Bitwise AND	&				Left to right
Bitwise XOR	^				Left to right
Bitwise OR	|				Right to left
Logical AND	&&				Left to right
Logical OR	||				Left to right
Conditional	?:				Right to left
Assignment	= += -= *= /= %=>>= <<= &= ^= |=	Right to left
Comma		,				Left to right

Punctuators
Punctuators in C++ have syntactic and semantic meaning to the compiler but do not, of themselves, specify an operation that yields a value. Some punctuators, either alone or in combination, can also be C++ operators or be significant to the preprocessor.

! % ^ & * ( ) - + = { } | ~
[ ] \ ; ' : " < > ? , . / #
